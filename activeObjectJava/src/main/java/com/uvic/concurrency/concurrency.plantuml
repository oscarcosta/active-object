@startuml

title __CONCURRENCY's Class Diagram__\n

  package com.uvic.concurrency {
    class ActiveObject {
        - dispatchQueue : BlockingQueue<Future<Message>>
        - scheduler : ExecutorService
        - createMessageRequest()
        - enqueue()
        + processMessage()
    }
  }
  

  package com.uvic.concurrency {
    class Client {
        - proxy : Proxy<Message>
        + Client()
        + getProxy()
        + setProxy()
        - execute()
        {static} + main()
    }
  }
  

  package com.uvic.concurrency {
    class Message {
        - content : String
        + Message()
        + toString()
    }
  }
  

  package com.uvic.concurrency {
    interface Proxy {
        {abstract} + processMessage()
    }
  }
  

  package com.uvic.concurrency {
    class Servant {
        + processMessage()
    }
  }
  

  ActiveObject -up-|> Proxy


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
